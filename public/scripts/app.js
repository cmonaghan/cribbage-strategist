// Generated by CoffeeScript 1.7.0
var Card, Hand, cardsDealt, dealSixRandomCards, findAllPossibleHands, possibleHands, scorePossibleHands;

Card = function(value, suit) {
  this.value = value;
  this.suit = suit;
  return this.scoreValue = value;
};

Hand = function(fourCardArr, twoTossedArr) {
  this.cardsKept = fourCardArr;
  this.cardsTossed = twoTossedArr;
  this.score = 0;
  return this.expectedValue = 0;
};

dealSixRandomCards = function() {
  var cardsDealt, i, suit, value;
  cardsDealt = [];
  i = 0;
  while (i < 6) {
    value = random(13);
    suit = random(4);
    cardsDealt.push(new Card(value, suit));
    i++;
  }
  return cardsDealt;
};

cardsDealt = dealSixRandomCards();

findAllPossibleHands = function(cardsDealt) {
  var fourCardArr, i, j, possibleHands, twoTossedArr;
  possibleHands = [];
  i = 0;
  while (i < cardsDealt.length) {
    j = 0;
    while (j < cardsDealt.length - 1) {
      fourCardArr = cardsDealt.slice();
      twoTossedArr = [];
      twoTossedArr.push(fourCardArr.splice(i, 1));
      twoTossedArr.push(fourCardArr.splice(j, 1));
      possibleHands.push(new Hand(fourCardArr, twoTossedArr));
      j++;
    }
    i++;
  }
  return possibleHands;
};

possibleHands = findAllPossibleHands(cardsDealt);

scorePossibleHands = function(possibleHands) {
  var i;
  i = 0;
  while (i < possibleHands.length) {
    possibleHands[i].score = scoreHand(possibleHands[i]);
    i++;
  }
  return possibleHands;
};

console.log(scorePossibleHands(possibleHands));
